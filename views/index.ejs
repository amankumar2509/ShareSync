<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>InShare - File Sharing Made Easy</title>
    <link rel="stylesheet" href="/front.css">
</head>

<body>

    <img src="/img/logo.png" alt="Inshare logo" class="logo">
    <section class="upload-container">
        <form  action="/api/files" method="post" enctype="multipart/form-data" id="emailForm">
            <div class="drop-zone">
                <div class="icon-container">
                    <img src="/img/file.svg" draggable="false" class="left" alt="File Icon">
                    <img src="/img/file.svg" draggable="false" class="center" alt="File Icon">
                    <img src="/img/file.svg" draggable="false" class="right" alt="File Icon">
                </div>
                <input type="file" id="fileInput">
                <div class="title">Drop your Files here or, <span id="browseBtn">browse</span></div>
            </div>
        </form>
        <div class="progress-container">
            <div class="bg-progress"></div>

            <div class="inner-container">
                <div class="status">Uploading...</div>
                <div class="percent-container">
                    <span class="percentage" id="progressPercent">0</span>%
                </div>
                <div class="progress-bar"></div>
            </div>

        </div>
        <div class="sharing-container">
            <p class="expire">Link expires in 24 hrs</p>

            <div class="input-container">
                <input type="text" id="fileURL" readonly>
                <img src="img/copy-icon.svg" id="copyURLBtn" alt="copy to clipboard icon">
            </div>

            <!-- <p class="email-info">Or Send via Email</p>
            <div class="email-container">
                <form id="emailForm">
                    <div class="filed">
                        <label for="fromEmail">Your email</label>
                        <input type="email" autocomplete="email" required name="from-email" id="fromEmail">
                    </div>

                    <div class="filed">
                        <label for="toEmail">Receiver's email</label>
                        <input type="email" required autocomplete="receiver" name="to-email" id="toEmail">
                    </div>
                    <div class="send-btn-container">
                        <button type="submit">Send</button>
                    </div>
                </form>
            </div> -->
        </div>
    </section>
    
    <script>
        const dropZone = document.querySelector(".drop-zone");
        const fileInput = document.querySelector("#fileInput");
        const browseBtn = document.querySelector("#browseBtn");
    
        const bgProgress = document.querySelector(".bg-progress");
        const progressPercent = document.querySelector("#progressPercent");
        const progressContainer = document.querySelector(".progress-container");
        const progressBar = document.querySelector(".progress-bar");
        const status = document.querySelector(".status");
    
        const sharingContainer = document.querySelector(".sharing-container");
        const copyURLBtn = document.querySelector("#copyURLBtn");
        const fileURL = document.querySelector("#fileURL");
        const emailForm = document.querySelector("#emailForm");
    
        const toast = document.querySelector(".toast");
    
        const baseURL = "<%= baseURL %>";

        const uploadURL = `${baseURL}/api/files`; 
     
    
        const maxAllowedSize = 100 * 1024 * 1024; // 100mb
    
        browseBtn.addEventListener("click", () => fileInput.click());
    
        dropZone.addEventListener("drop", (e) => handleDrop(e));
        dropZone.addEventListener("dragover", (e) => handleDragOver(e));
        dropZone.addEventListener("dragleave", () => dropZone.classList.remove("dragged"));
    
        fileInput.addEventListener("change", () => handleFileInputChange());
        copyURLBtn.addEventListener("click", () => copyFileURL());
    
        emailForm.addEventListener("submit", (e) => handleEmailFormSubmit(e));
    
        const handleDrop = (e) => {
            e.preventDefault();
            const files = e.dataTransfer.files;
            if (files.length === 1) {
                if (files[0].size < maxAllowedSize) {
                    fileInput.files = files;
                    uploadFile();
                } else {
                    showToast("Max file size is 100MB");
                }
            } else if (files.length > 1) {
                showToast("You can't upload multiple files");
            }
            dropZone.classList.remove("dragged");
        };
    
        const handleDragOver = (e) => {
            e.preventDefault();
            dropZone.classList.add("dragged");
        };
    
        const handleFileInputChange = () => {
            if (fileInput.files[0].size > maxAllowedSize) {
                showToast("Max file size is 100MB");
                fileInput.value = ""; // reset the input
                return;
            }
            uploadFile();
        };
    
        const copyFileURL = () => {
            fileURL.select();
            document.execCommand("copy");
            showToast("Copied to clipboard");
        };
    
        const uploadFile = () => {
            const formData = new FormData();
            formData.append("myfile", fileInput.files[0]);
    
            progressContainer.style.display = "block";
    
            const xhr = new XMLHttpRequest();
    
            xhr.upload.onprogress = function (event) {
                let percent = Math.round((100 * event.loaded) / event.total);
                progressPercent.innerText = percent;
                const scaleX = `scaleX(${percent / 100})`;
                bgProgress.style.transform = scaleX;
                progressBar.style.transform = scaleX;
            };
    
            xhr.upload.onerror = function () {
                showToast(`Error in upload: ${xhr.status}.`);
                fileInput.value = "";
            };
    
            xhr.onreadystatechange = function () {
                if (xhr.readyState == XMLHttpRequest.DONE) {
                    onFileUploadSuccess(xhr.responseText);
                }
            };
    
            xhr.open("POST", uploadURL);
            xhr.send(formData);
        };
    
        const onFileUploadSuccess = (res) => {
            fileInput.value = "";
            status.innerText = "Uploaded";
    
            //emailForm[2].removeAttribute("disabled");
            //emailForm[2].innerText = "Send";
            progressContainer.style.display = "none";
    
            const { file: url } = JSON.parse(res);
            console.log(url);
            sharingContainer.style.display = "block";
            fileURL.value = url;
        };
    
            </script>
    
</body>

</html>
